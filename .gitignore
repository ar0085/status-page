# Status Page Project - Comprehensive .gitignore

# =====================================================
# PYTHON / BACKEND SPECIFIC
# =====================================================

# Python virtual environments
venv/
env/
ENV/
.venv/
.env/
backend/venv/
backend/env/

# Python bytecode
__pycache__/
*.py[cod]
*$py.class
*.so

# Python distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# =====================================================
# NODE.JS / FRONTEND SPECIFIC
# =====================================================

# Dependencies
node_modules/
frontend/node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# TypeScript build outputs
dist/
dist-ssr/
frontend/dist/
frontend/dist-ssr/

# Vite build outputs
.vite/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# =====================================================
# ENVIRONMENT VARIABLES & SECRETS
# =====================================================

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
backend/.env
frontend/.env
frontend/.env.local
frontend/.env.development.local
frontend/.env.test.local
frontend/.env.production.local

# Secrets and API keys
secrets.json
.secrets/
*.key
*.pem

# =====================================================
# DATABASE
# =====================================================

# SQLite databases
*.db
*.sqlite
*.sqlite3

# Database backups
*.sql
*.dump
*.bak

# =====================================================
# DEVELOPMENT TOOLS
# =====================================================

# VS Code
.vscode/
*.code-workspace

# IntelliJ IDEA
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-workspace
*.sublime-project

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =====================================================
# OPERATING SYSTEM
# =====================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =====================================================
# LOGS & TEMPORARY FILES
# =====================================================

# Log files
*.log
logs/
*.log.*
backend/logs/
frontend/logs/

# Temporary files
*.tmp
*.temp
.tmp/
.temp/

# =====================================================
# DOCKER (if used)
# =====================================================

# Docker
.dockerignore
Dockerfile
docker-compose.yml
docker-compose.override.yml
.docker/

# =====================================================
# DEPLOYMENT & CI/CD
# =====================================================

# Deployment artifacts
deploy/
deployment/
.deploy/

# CI/CD
.github/workflows/secrets/
.gitlab-ci-local/

# =====================================================
# PROJECT SPECIFIC
# =====================================================

# Alembic (database migrations) - keep structure but ignore auto-generated files
backend/alembic/versions/*.py
!backend/alembic/versions/__init__.py

# Keep example files but ignore actual config
*.example
!.env.example
!backend/.env.example
!frontend/.env.example

# Testing artifacts
.coverage
htmlcov/
.pytest_cache/
test-results/

# Build artifacts
build/
dist/

# Package lock files (optional - some teams prefer to include these)
# package-lock.json
# yarn.lock

# =====================================================
# SECURITY & CERTIFICATES
# =====================================================

# SSL certificates
*.crt
*.cert
*.p12
*.pfx

# Private keys
*.private
*.priv 